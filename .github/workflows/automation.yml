on: [push]
name: vcd-io project action

jobs: 
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Rust Action
        uses: icepuma/rust-action@1.68.0
        
  rust-clippy-analyze:
    name: Run rust-clippy analyzing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Rust Action
        uses: icepuma/rust-action@1.68.0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Run rust-clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true


  cov-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Rust Action
        uses: icepuma/rust-action@1.68.0

      - name: generate coverage report
        env: 
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: '-Cinstrument-coverage'
          LLVM_PROFILE_FILE: 'cargo-test-%p-%m.profraw'
        run: |
          rustup component add llvm-tools-preview
          cargo install grcov cargo-nextest
          cargo nextest run
          grcov . --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o target/coverage/tests.lcov
      
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: coverage/*.lcov
